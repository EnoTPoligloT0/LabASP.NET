@{
    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
    int totalPages = ViewData["TotalPages"] as int? ?? 1;
    int maxPagesToShow = 5; // Limit to ±5 pages around the current page
    int startPage = Math.Max(1, currentPage - maxPagesToShow);
    int endPage = Math.Min(totalPages, currentPage + maxPagesToShow);
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @if (currentPage > 1 && startPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string, new { pageNumber = 1 })">First</a>
            </li>
        }

        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string, new { pageNumber = currentPage - 1 })">&laquo; Prev</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">&laquo; Prev</a>
            </li>
        }

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string, new { pageNumber = i })">@i</a>
            </li>
        }

        <li class="page-item">
            <form class="d-flex" method="get" action="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string)">
                <input type="number" name="pageNumber" class="form-control" style="width: 70px;"
                       placeholder="Page" min="1" max="@totalPages" value="@currentPage" />
                <button type="submit" class="btn btn-primary">Go</button>
            </form>
        </li>

        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string, new { pageNumber = currentPage + 1 })">Next &raquo;</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Next &raquo;</a>
            </li>
        }

        @if (currentPage < totalPages && endPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action(ViewData["Action"] as string, ViewData["Controller"] as string, new { pageNumber = totalPages })">Last</a>
            </li>
        }
    </ul>
</nav>
